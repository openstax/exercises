---
http_interactions:
- request:
    method: get
    uri: https://<openstax_content_bucket_name>.s3.amazonaws.com/?delimiter=/&list-type=2&prefix=apps/archive/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - ''
      User-Agent:
      - aws-sdk-ruby3/3.122.1 ruby/2.7.2 x86_64-darwin20 aws-sdk-s3/1.88.0
      X-Amz-Date:
      - 20220510T172704Z
      X-Amz-Security-Token:
      - "<X-Amz-Security-Token 1>"
      X-Amz-Content-Sha256:
      - e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
      Authorization:
      - "<Authorization 1>"
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      X-Amz-Id-2:
      - "<X-Amz-Id-2 1>"
      X-Amz-Request-Id:
      - "<X-Amz-Request-Id 1>"
      Date:
      - Tue, 10 May 2022 17:27:06 GMT
      X-Amz-Bucket-Region:
      - "<openstax_content_s3_region>"
      Content-Type:
      - application/xml
      Transfer-Encoding:
      - chunked
      Server:
      - AmazonS3
    body:
      encoding: UTF-8
      string: |-
        <?xml version="1.0" encoding="UTF-8"?>
        <ListBucketResult xmlns="http://s3.amazonaws.com/doc/2006-03-01/"><Name><openstax_content_bucket_name></Name><Prefix>apps/archive/</Prefix><KeyCount>19</KeyCount><MaxKeys>1000</MaxKeys><Delimiter>/</Delimiter><IsTruncated>false</IsTruncated><CommonPrefixes><Prefix>apps/archive/20200827.155539/</Prefix></CommonPrefixes><CommonPrefixes><Prefix>apps/archive/20201014.233724/</Prefix></CommonPrefixes><CommonPrefixes><Prefix>apps/archive/20201029.133542/</Prefix></CommonPrefixes><CommonPrefixes><Prefix>apps/archive/20201222.172624/</Prefix></CommonPrefixes><CommonPrefixes><Prefix>apps/archive/20210224.204120/</Prefix></CommonPrefixes><CommonPrefixes><Prefix>apps/archive/20210325.214454/</Prefix></CommonPrefixes><CommonPrefixes><Prefix>apps/archive/20210421.141058/</Prefix></CommonPrefixes><CommonPrefixes><Prefix>apps/archive/20210514.171726/</Prefix></CommonPrefixes><CommonPrefixes><Prefix>apps/archive/20210623.195337/</Prefix></CommonPrefixes><CommonPrefixes><Prefix>apps/archive/20210713.205645/</Prefix></CommonPrefixes><CommonPrefixes><Prefix>apps/archive/20210823.155019/</Prefix></CommonPrefixes><CommonPrefixes><Prefix>apps/archive/20211208.194259/</Prefix></CommonPrefixes><CommonPrefixes><Prefix>apps/archive/20211209.160144/</Prefix></CommonPrefixes><CommonPrefixes><Prefix>apps/archive/20220118.185250/</Prefix></CommonPrefixes><CommonPrefixes><Prefix>apps/archive/20220131.212404/</Prefix></CommonPrefixes><CommonPrefixes><Prefix>apps/archive/20220228.174637/</Prefix></CommonPrefixes><CommonPrefixes><Prefix>apps/archive/20220325.143432/</Prefix></CommonPrefixes><CommonPrefixes><Prefix>apps/archive/20220411.192702/</Prefix></CommonPrefixes><CommonPrefixes><Prefix>apps/archive/20220422.171947/</Prefix></CommonPrefixes></ListBucketResult>
  recorded_at: Tue, 10 May 2022 17:27:05 GMT
- request:
    method: get
    uri: https://raw.githubusercontent.com/openstax/content-manager-approved-books/main/approved-book-list.json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.8.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - keep-alive
      Content-Length:
      - '5717'
      Cache-Control:
      - max-age=300
      Content-Security-Policy:
      - default-src 'none'; style-src 'unsafe-inline'; sandbox
      Content-Type:
      - text/plain; charset=utf-8
      Etag:
      - W/"5df1e467782adbc7ad4ea6a15d1ff8b97e008930b313990a924c59e3b70edcca"
      Strict-Transport-Security:
      - max-age=31536000
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - deny
      X-Xss-Protection:
      - 1; mode=block
      X-Github-Request-Id:
      - 266E:02F2:208E1:2D3FC:627A69A0
      Accept-Ranges:
      - bytes
      Date:
      - Tue, 10 May 2022 17:27:05 GMT
      Via:
      - 1.1 varnish
      X-Served-By:
      - cache-iah17246-IAH
      X-Cache:
      - HIT
      X-Cache-Hits:
      - '1'
      X-Timer:
      - S1652203625.232064,VS0,VE91
      Vary:
      - Authorization,Accept-Encoding,Origin
      Access-Control-Allow-Origin:
      - "*"
      X-Fastly-Request-Id:
      - 391f1e4f8f34b8447bea26eb2922fbd3c597351b
      Expires:
      - Tue, 10 May 2022 17:32:05 GMT
      Source-Age:
      - '0'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Tue, 10 May 2022 17:27:05 GMT
- request:
    method: get
    uri: https://openstax.org/apps/archive/20220422.171947/contents/185cbf87-c72e-48f5-b51e-f14f21b5eabd@e989ec3.json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.8.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 404
      message: Not Found
    headers:
      Content-Type:
      - text/html
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Mon, 09 May 2022 23:47:53 GMT
      Server:
      - nginx
      Last-Modified:
      - Mon, 18 Apr 2022 19:26:22 GMT
      Etag:
      - W/"625dbb5e-28b7"
      Strict-Transport-Security:
      - max-age=31536000
      X-Cache:
      - Error from cloudfront
      Via:
      - 1.1 12ffe73e0e46463891616bafd7e451c4.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DFW50-C1
      X-Amz-Cf-Id:
      - G3HWbnEMjQhHT2QWrgdMxSQYe6HBfn-TaQ6dnMteWfTAGu2zgEmlLw==
      Age:
      - '63552'
    body:
      encoding: ASCII-8BIT
      string: |-
        <!doctype html><html lang="en-US"><head><title>OpenStax</title><meta charset="utf-8"><meta name="viewport" content="width=device-width,initial-scale=1,maximum-scale=5"><meta name="description" content=""><link rel="preload" as="font" type="font/woff2" crossorigin href="/cms/assets/fonts/5b1fbd62-45dc-4433-a7df-a2b24a146411.woff2"><link rel="preconnect" href="https://pi.pardot.com" crossorigin><style>.async-hide { opacity: 0 !important}</style><script>(function(a,s,y,n,c,h,i,d,e){s.className+=' '+y;h.start=1*new Date;
                h.end=i=function(){s.className=s.className.replace(RegExp(' ?'+y),'')};
                (a[n]=a[n]||[]).hide=h;setTimeout(function(){i();h.end=null},c);h.timeout=c;
                })(window,document.documentElement,'async-hide','dataLayer',4000,
                {'GTM-KW9STW6':true});</script><script src="https://www.google-analytics.com/analytics.js"></script><script async src="https://www.googleoptimize.com/optimize.js?id=GTM-KW9STW6"></script><script src="//script.crazyegg.com/pages/scripts/0084/9271.js" async="async"></script><script src="/settings.js?20211201" type="module"></script><script>// Expect required variables to be set in settings.js above
                    (function() {
                        function async_load(){
                            var s = document.createElement('script'); s.type = 'text/javascript';
                            s.src = ('https:' == document.location.protocol ? 'https://pi' : 'http://cdn') + '.pardot.com/pd.js';
                            var c = document.getElementsByTagName('script')[0]; c.parentNode.insertBefore(s, c);
                        }
                        if(window.attachEvent) { window.attachEvent('onload', async_load); }
                        else { window.addEventListener('load', async_load, false); }
                    })();</script><link rel="prefetch" href="/apps/cms/api/books/?format=json"><link rel="prefetch" href="/apps/cms/api/footer/?format=json"><link rel="prefetch" href="/apps/cms/api/v2/pages/openstax-homepage/?format=json"><script>(function() {
                    var w = window, d = document;
                    w['pi']=function() {
                        w['pi'].commands = w['pi'].commands || [];
                        w['pi'].commands.push(arguments);
                    };
                    var s = d.createElement('script'); s.async = 1;
                    s.src = '//js.pulseinsights.com/surveys.js';
                    var f = d.getElementsByTagName('script')[0];
                    f.parentNode.insertBefore(s, f);

                    pi('identify', 'PI-16384954');
                    pi('get', 'surveys');
                })();</script><script>!function(f,b,e,v,n,t,s)
                  {if(f.fbq)return;n=f.fbq=function(){n.callMethod?
                  n.callMethod.apply(n,arguments):n.queue.push(arguments)};
                  if(!f._fbq)f._fbq=n;n.push=n;n.loaded=!0;n.version='2.0';
                  n.queue=[];t=b.createElement(e);t.async=!0;
                  t.src=v;s=b.getElementsByTagName(e)[0];
                  s.parentNode.insertBefore(t,s)}(window, document,'script',
                  'https://connect.facebook.net/en_US/fbevents.js');
                  fbq('init', '560465674310764');
                  fbq('track', 'PageView');</script><link rel="shortcut icon" href="/assets/favicon.ico"><link rel="icon" type="image/png" sizes="16x16" href="/assets/favicon-16x16.png"><link rel="icon" type="image/png" sizes="32x32" href="/assets/favicon-32x32.png"><link rel="icon" type="image/png" sizes="48x48" href="/assets/favicon-48x48.png"><link rel="manifest" href="/assets/manifest.json"><meta name="mobile-web-app-capable" content="yes"><meta name="theme-color" content="#fff"><meta name="application-name" content="@openstax/os-webview"><link rel="apple-touch-icon" sizes="57x57" href="/assets/apple-touch-icon-57x57.png"><link rel="apple-touch-icon" sizes="60x60" href="/assets/apple-touch-icon-60x60.png"><link rel="apple-touch-icon" sizes="72x72" href="/assets/apple-touch-icon-72x72.png"><link rel="apple-touch-icon" sizes="76x76" href="/assets/apple-touch-icon-76x76.png"><link rel="apple-touch-icon" sizes="114x114" href="/assets/apple-touch-icon-114x114.png"><link rel="apple-touch-icon" sizes="120x120" href="/assets/apple-touch-icon-120x120.png"><link rel="apple-touch-icon" sizes="144x144" href="/assets/apple-touch-icon-144x144.png"><link rel="apple-touch-icon" sizes="152x152" href="/assets/apple-touch-icon-152x152.png"><link rel="apple-touch-icon" sizes="167x167" href="/assets/apple-touch-icon-167x167.png"><link rel="apple-touch-icon" sizes="180x180" href="/assets/apple-touch-icon-180x180.png"><link rel="apple-touch-icon" sizes="1024x1024" href="/assets/apple-touch-icon-1024x1024.png"><meta name="apple-mobile-web-app-capable" content="yes"><meta name="apple-mobile-web-app-status-bar-style" content="black-translucent"><meta name="apple-mobile-web-app-title" content="@openstax/os-webview"><link rel="apple-touch-startup-image" media="(device-width: 320px) and (device-height: 568px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)" href="/assets/apple-touch-startup-image-640x1136.png"><link rel="apple-touch-startup-image" media="(device-width: 375px) and (device-height: 667px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)" href="/assets/apple-touch-startup-image-750x1334.png"><link rel="apple-touch-startup-image" media="(device-width: 414px) and (device-height: 896px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)" href="/assets/apple-touch-startup-image-828x1792.png"><link rel="apple-touch-startup-image" media="(device-width: 375px) and (device-height: 812px) and (-webkit-device-pixel-ratio: 3) and (orientation: portrait)" href="/assets/apple-touch-startup-image-1125x2436.png"><link rel="apple-touch-startup-image" media="(device-width: 414px) and (device-height: 736px) and (-webkit-device-pixel-ratio: 3) and (orientation: portrait)" href="/assets/apple-touch-startup-image-1242x2208.png"><link rel="apple-touch-startup-image" media="(device-width: 414px) and (device-height: 896px) and (-webkit-device-pixel-ratio: 3) and (orientation: portrait)" href="/assets/apple-touch-startup-image-1242x2688.png"><link rel="apple-touch-startup-image" media="(device-width: 768px) and (device-height: 1024px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)" href="/assets/apple-touch-startup-image-1536x2048.png"><link rel="apple-touch-startup-image" media="(device-width: 834px) and (device-height: 1112px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)" href="/assets/apple-touch-startup-image-1668x2224.png"><link rel="apple-touch-startup-image" media="(device-width: 834px) and (device-height: 1194px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)" href="/assets/apple-touch-startup-image-1668x2388.png"><link rel="apple-touch-startup-image" media="(device-width: 1024px) and (device-height: 1366px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)" href="/assets/apple-touch-startup-image-2048x2732.png"><link rel="apple-touch-startup-image" media="(device-width: 810px) and (device-height: 1080px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)" href="/assets/apple-touch-startup-image-1620x2160.png"><link rel="apple-touch-startup-image" media="(device-width: 320px) and (device-height: 568px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape)" href="/assets/apple-touch-startup-image-1136x640.png"><link rel="apple-touch-startup-image" media="(device-width: 375px) and (device-height: 667px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape)" href="/assets/apple-touch-startup-image-1334x750.png"><link rel="apple-touch-startup-image" media="(device-width: 414px) and (device-height: 896px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape)" href="/assets/apple-touch-startup-image-1792x828.png"><link rel="apple-touch-startup-image" media="(device-width: 375px) and (device-height: 812px) and (-webkit-device-pixel-ratio: 3) and (orientation: landscape)" href="/assets/apple-touch-startup-image-2436x1125.png"><link rel="apple-touch-startup-image" media="(device-width: 414px) and (device-height: 736px) and (-webkit-device-pixel-ratio: 3) and (orientation: landscape)" href="/assets/apple-touch-startup-image-2208x1242.png"><link rel="apple-touch-startup-image" media="(device-width: 414px) and (device-height: 896px) and (-webkit-device-pixel-ratio: 3) and (orientation: landscape)" href="/assets/apple-touch-startup-image-2688x1242.png"><link rel="apple-touch-startup-image" media="(device-width: 768px) and (device-height: 1024px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape)" href="/assets/apple-touch-startup-image-2048x1536.png"><link rel="apple-touch-startup-image" media="(device-width: 834px) and (device-height: 1112px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape)" href="/assets/apple-touch-startup-image-2224x1668.png"><link rel="apple-touch-startup-image" media="(device-width: 834px) and (device-height: 1194px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape)" href="/assets/apple-touch-startup-image-2388x1668.png"><link rel="apple-touch-startup-image" media="(device-width: 1024px) and (device-height: 1366px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape)" href="/assets/apple-touch-startup-image-2732x2048.png"><link rel="apple-touch-startup-image" media="(device-width: 810px) and (device-height: 1080px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape)" href="/assets/apple-touch-startup-image-2160x1620.png"><link rel="icon" type="image/png" sizes="228x228" href="/assets/coast-228x228.png"><meta name="msapplication-TileColor" content="#fff"><meta name="msapplication-TileImage" content="/assets/mstile-144x144.png"><meta name="msapplication-config" content="/assets/browserconfig.xml"><link rel="yandex-tableau-widget" href="/assets/yandex-browser-manifest.json"><script defer="defer" src="/runtime-378d02ea0c08ca95bc65.min.js"></script><script defer="defer" src="/npm.lodash-378d02ea0c08ca95bc65.min.js"></script><script defer="defer" src="/npm.preact-378d02ea0c08ca95bc65.min.js"></script><script defer="defer" src="/npm.sentry-378d02ea0c08ca95bc65.min.js"></script><script defer="defer" src="/299-378d02ea0c08ca95bc65.min.js"></script><script defer="defer" src="/main-378d02ea0c08ca95bc65.min.js"></script></head><body class="page-loading"><noscript><div class="nojs"><p>You must enable JavaScript in order to use this site.</p></div></noscript><div id="app"></div></body></html>
  recorded_at: Tue, 10 May 2022 17:27:05 GMT
- request:
    method: get
    uri: https://<openstax_content_bucket_name>.s3.amazonaws.com/?delimiter=/&list-type=2&prefix=apps/archive/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - ''
      User-Agent:
      - aws-sdk-ruby3/3.122.1 ruby/2.7.2 x86_64-darwin20 aws-sdk-s3/1.88.0
      X-Amz-Date:
      - 20220510T172705Z
      X-Amz-Security-Token:
      - "<X-Amz-Security-Token 1>"
      X-Amz-Content-Sha256:
      - e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
      Authorization:
      - "<Authorization 1>"
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      X-Amz-Id-2:
      - "<X-Amz-Id-2 1>"
      X-Amz-Request-Id:
      - "<X-Amz-Request-Id 1>"
      Date:
      - Tue, 10 May 2022 17:27:06 GMT
      X-Amz-Bucket-Region:
      - "<openstax_content_s3_region>"
      Content-Type:
      - application/xml
      Transfer-Encoding:
      - chunked
      Server:
      - AmazonS3
    body:
      encoding: UTF-8
      string: |-
        <?xml version="1.0" encoding="UTF-8"?>
        <ListBucketResult xmlns="http://s3.amazonaws.com/doc/2006-03-01/"><Name><openstax_content_bucket_name></Name><Prefix>apps/archive/</Prefix><KeyCount>19</KeyCount><MaxKeys>1000</MaxKeys><Delimiter>/</Delimiter><IsTruncated>false</IsTruncated><CommonPrefixes><Prefix>apps/archive/20200827.155539/</Prefix></CommonPrefixes><CommonPrefixes><Prefix>apps/archive/20201014.233724/</Prefix></CommonPrefixes><CommonPrefixes><Prefix>apps/archive/20201029.133542/</Prefix></CommonPrefixes><CommonPrefixes><Prefix>apps/archive/20201222.172624/</Prefix></CommonPrefixes><CommonPrefixes><Prefix>apps/archive/20210224.204120/</Prefix></CommonPrefixes><CommonPrefixes><Prefix>apps/archive/20210325.214454/</Prefix></CommonPrefixes><CommonPrefixes><Prefix>apps/archive/20210421.141058/</Prefix></CommonPrefixes><CommonPrefixes><Prefix>apps/archive/20210514.171726/</Prefix></CommonPrefixes><CommonPrefixes><Prefix>apps/archive/20210623.195337/</Prefix></CommonPrefixes><CommonPrefixes><Prefix>apps/archive/20210713.205645/</Prefix></CommonPrefixes><CommonPrefixes><Prefix>apps/archive/20210823.155019/</Prefix></CommonPrefixes><CommonPrefixes><Prefix>apps/archive/20211208.194259/</Prefix></CommonPrefixes><CommonPrefixes><Prefix>apps/archive/20211209.160144/</Prefix></CommonPrefixes><CommonPrefixes><Prefix>apps/archive/20220118.185250/</Prefix></CommonPrefixes><CommonPrefixes><Prefix>apps/archive/20220131.212404/</Prefix></CommonPrefixes><CommonPrefixes><Prefix>apps/archive/20220228.174637/</Prefix></CommonPrefixes><CommonPrefixes><Prefix>apps/archive/20220325.143432/</Prefix></CommonPrefixes><CommonPrefixes><Prefix>apps/archive/20220411.192702/</Prefix></CommonPrefixes><CommonPrefixes><Prefix>apps/archive/20220422.171947/</Prefix></CommonPrefixes></ListBucketResult>
  recorded_at: Tue, 10 May 2022 17:27:05 GMT
- request:
    method: get
    uri: https://openstax.org/apps/archive/20220411.192702/contents/185cbf87-c72e-48f5-b51e-f14f21b5eabd@e989ec3.json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.8.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Tue, 10 May 2022 16:17:11 GMT
      Last-Modified:
      - Thu, 21 Apr 2022 19:04:16 GMT
      X-Amz-Version-Id:
      - rCD34Wtguqvwdc1T4rFTyaS_6j8wqQuc
      Etag:
      - W/"2a0c6b1d6ce605ddce8e5d61c5fcab0c"
      Server:
      - AmazonS3
      Vary:
      - Accept-Encoding
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 a29822829c600346e3d9340fbf747f6c.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DFW50-C1
      X-Amz-Cf-Id:
      - fFij-Ci-gjiWOub-r7v_MWAkmhU5xGfBVGmmcFSYFi8HHBzpLR-sTA==
      Age:
      - '4195'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Tue, 10 May 2022 17:27:05 GMT
recorded_with: VCR 6.0.0
