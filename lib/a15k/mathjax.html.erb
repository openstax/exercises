<script src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/MathJax.js?config=TeX-MML-AM_HTMLorMML-full"></script>
<script>
  var MATH_MARKER_BLOCK  = '\u200c\u200c\u200c' // zero-width non-joiner
  var MATH_MARKER_INLINE = '\u200b\u200b\u200b' // zero-width space
  var MATH_DATA_SELECTOR = '[data-math]';
  var MATH_ML_SELECTOR = 'math';
  MathJax.Hub.Config({
    showProcessingMessages: false,
    tex2jax: {
      displayMath: [[MATH_MARKER_BLOCK, MATH_MARKER_BLOCK]],
      inlineMath: [[MATH_MARKER_INLINE, MATH_MARKER_INLINE]],
    },
  });
  var formula, i, latexNodes, len, mathMLNodes, node, ref;
  latexNodes = [];
  ref = document.body.querySelectorAll(MATH_DATA_SELECTOR);
  for (i = 0, len = ref.length; i < len; i++) {
    node = ref[i];
    formula = node.getAttribute('data-math');
    // divs should be rendered as a block, others inline
    if (node.tagName.toLowerCase() === 'div') {
      node.textContent = MATH_MARKER_BLOCK + formula + MATH_MARKER_BLOCK;
    } else {
      node.textContent = MATH_MARKER_INLINE +  formula + MATH_MARKER_INLINE;
    }
    latexNodes.push(node);
  }
  if (latexNodes.length) {
    MathJax.Hub.Typeset(latexNodes);
  }
  mathMLNodes = Array.from(document.querySelectorAll(MATH_ML_SELECTOR));
  if (mathMLNodes.length) {
    MathJax.Hub.Typeset(document.body);
  }
</script>
